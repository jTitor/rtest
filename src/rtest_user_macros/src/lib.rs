/*!
 * Crate root for the library.
 */

//Anything marked "unreachable!()"
//is intentional; it's supposed to indicate
//that the section needs expanding
#![allow(unreachable_code)]

extern crate proc_macro;
extern crate rtest_impl;

//Define our base level modules.

//Define custom attributes; whoever decided these have to be
//in the crate root were - actually they're not so bad now
//that these are in a separate crate
use proc_macro::TokenStream;

/**
 * Initializes rtest for the crate this macro is used in,
 * generating the unit tests and harness entry point.
 * 
 * Apply this attribute via #![init_rtest] in the
 * root module of your unit test crate.
 * Only apply this attribute once.
 */
#[proc_macro_attribute]
pub fn init_rtest(attr: TokenStream, item: TokenStream) -> TokenStream {
	//Apply the codegen...
	let expanded = rtest_impl::do_test_harness_root(attr, item);

	//And return the augmented code	
	expanded
}

/**
 * Runs the harness entry point generated by #![init_rtest].
 * 
 * Call this in your unit test crate's main() function with
 * run_rtest!().
 * This will call std::process::exit(), so there's no point
 * trying to call this more than once.
 */
#[proc_macro]
pub fn run_rtest(item: TokenStream) -> TokenStream {
	unimplemented!();

	//Return the input elements as-is.
	item
}